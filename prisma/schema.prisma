// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"] //* for search bar
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

model User {
  id       String   @id @default(cuid())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  userName String
  email    String  @unique
  address  String?
  phone    String?
  gender   Gender?
  birthday String?
  imgUrl   String? @default("https://cdn.pixabay.com/photo/2016/08/31/11/54/icon-1633249_960_720.png")
  password String

  provider      String    @default("credentials")
  emailVerified DateTime?

  savedHomes String[]

  listing Listing[]
}

enum FormType {
  Rent
  Sell
}

// model ImageUpload {
//   id        String   @id @default(cuid())
//   name      String
//   Listing   Listing? @relation(fields: [listingId], references: [id], onDelete: Cascade)
//   listingId String?
// }

model Listing {
  id       String   @id @default(cuid())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  name        String
  description String?

  location      Location?
  imgUrl        String[] 
  bedrooms      Int
  bathrooms     Int
  squaremetre   Decimal
  regularPrice  Decimal
  discountPrice Decimal?
  furnished     Boolean?  @default(false)
  offer         Boolean?  @default(false)
  parking       Boolean?  @default(false)
  amenities     String[]
  formType      FormType
  houseType     String

  address   Address @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId String

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Address {
  id       String    @id @default(cuid())
  number   String
  street   String
  ward     String
  district String
  city     String
  Listing  Listing[]
}

model Location {
  id        String  @id @default(cuid())
  latitude  String
  longitude String
  Listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId String  @unique
}
